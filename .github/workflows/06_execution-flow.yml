# name: Website Deployment
# on:
#   push:
#     branches:
#       - main
# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         # check if dependencies installation is needed, otherwise skip 'npm ci'
#         # check if cached dependencies matches the needed deependencies
#         # use "id: cache" vie steps object context to access output ('true'/'false') of actions/cache@v3
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm ci
#       - name: Lint code
#         run: npm run lint
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm ci
#       - name: Test code
#         # id can be added to every step to identify it
#         id: run-tests
#         run: npm run test
#       # upload should be executed if test fails, but by default
#       # all following steps AND all jobs based on this job are stopped
#       - name: Upload test report
#         # add condition with a dynamically evaluated expression with steps object context
#         # here: you can also omit surrounding ${{ }}
#         # conditional functions: failure() needed to change default behavior of stopping execution if step fails
#         # operators: https://docs.github.com/en/actions/learn-github-actions/expressions#operators
#         if: ${{ failure() && steps.run-tests.outcome == 'failure'}}
#         uses: actions/upload-artifact@v3
#         with:
#           name: test-report
#           # test.json summary is produced by script (-> package.json)
#           path: test.json
#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm ci
#       - name: Build website
#         id: build-website
#         run: npm run build
#       - name: Upload artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist-files
#           path: dist
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: dist-files
#       - name: Output contents
#         run: ls
#       - name: Deploy
#         run: echo "Deploying..."
#   report:
#     # only starts after 'lint' and 'deploy' (which depends on 'build' and 'test') finished
#     needs: [lint, deploy]
#     # only executed if any other job or step failed
#     if: failure()
#     runs-on: ubuntu-latest
#     steps:
#       - name: Output information
#         run: |
#           echo "Something went wrong"
#           echo "${{ toJSON(github) }}"
