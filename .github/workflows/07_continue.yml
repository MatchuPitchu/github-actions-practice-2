# name: Continue Website Deployment
# on:
#   push:
#     branches:
#       - main
# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: List the state of node modules
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm list
#       - name: Install dependencies
#         run: npm ci
#       - name: Lint code
#         run: npm run lint
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: List the state of node modules
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm list
#       - name: Install dependencies
#         run: npm ci
#       - name: Test code
#         # job should continue execution even if step fails
#         # treats step as succeeded despite it is technically failing
#         # Docu for steps object context: https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
#         continue-on-error: true
#         id: run-tests
#         run: npm run test
#       - name: Upload test report
#         uses: actions/upload-artifact@v3
#         with:
#           name: test-report
#           path: test.json
#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: List the state of node modules
#         if: ${{ steps.cache.outputs.cache-hit != 'true'}}
#         run: npm list
#       - name: Install dependencies
#         run: npm ci
#       - name: Build website
#         id: build-website
#         run: npm run build
#       - name: Upload artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist-files
#           path: dist
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: dist-files
#       - name: Output contents
#         run: ls
#       - name: Deploy
#         run: echo "Deploying..."
#   report:
#     needs: [lint, deploy]
#     if: failure()
#     runs-on: ubuntu-latest
#     steps:
#       - name: Output information
#         run: |
#           echo "Something went wrong"
#           echo "${{ toJSON(github) }}"
